stamp 2D oscillations of polytropes

input m I3
input iparity I1
input pindex f5.3
input rota f8.6
input lres I4
input lmod I3
input lmax I3
input iCor I1
input dirmodel A512
input dirmodroot A512
input tagdir A512
input serie A512
input l_in I3

definition double_precision Gamma1  5d0/3d0
definition double_precision gamma_p  1d0 + 1d0/pindex

eqlist  eqB equ eqv eqPi eqPhi eqPhie eqw
varlist B u v Pi Phi Phie w

lvar B    abs(m)+iparity
lvar u    abs(m)+iparity
lvar v    abs(m)+iparity
lvar Pi   abs(m)+iparity
lvar Phi  abs(m)+iparity
lvar Phie abs(m)+iparity
lvar w    abs(m)+1-iparity

leq eqB    abs(m)+iparity
leq equ    abs(m)+iparity
leq eqv    abs(m)+iparity
leq eqPi   abs(m)+iparity
leq eqPhi  abs(m)+iparity
leq eqPhie abs(m)+iparity
leq eqw    abs(m)+1-iparity

definition integer pder modulo(abs(m)+iparity+1,2)
definition integer uder modulo(abs(m)+iparity,2)

instruction lmax = maxval(dm(1)%lvar)
instruction call initialisation(nt,nr,m,lres,lmax) # this initialises the integrales module
instruction zeta(1,$j1) = 1d0   # add-hoc instructions to avoid divisions by zero
instruction r_map(1,$j1) = 1d0  # add-hoc instructions to avoid divisions by zero
#-------------------------------------------------------------------------------------
equation eqB

term s w1 -1d0                                                                  B
sub rtt w0 Illm(-zeta**2*hh/(r_map**2*r_z),$a,$leq,$lvar)                       u'
sub rtt w0 Illm((-2d0*zeta*hh-zeta**2*pindex*hhz)/(r_map**2*r_z),$a,$leq,$lvar) u
sub rtt w0 Illm(zeta*hh/(r_map**2*r_z),$a,$leq,$lvar)                           v
instruction $prev = $prev*dble($lvar($j2)*($lvar($j2)+1))
sub rtt w0 Jllm(-zeta*pindex*hht/(r_map**2*r_z),$a,$leq,$lvar)                  v
sub rtt w0 Kllm(-zeta*pindex*hht/(r_map**2*r_z),$a,$leq,$lvar)                  w

termbc t 1 w0 1d0 B^pder(1)
#-------------------------------------------------------------------------------------
equation equ

sub rtt w1 Illm(zeta**2*r_z*hh/r_map**2,$a,$leq,$lvar)                          u
sub rtt w1 Jllm(zeta*r_t*hh/r_map**2,$a,$leq,$lvar)                             v
sub rtt w1 Kllm(zeta*r_t*hh/r_map**2,$a,$leq,$lvar)                             w
sub rtt w0 Kllm(-2d0*omga*hh*zeta*sint/r_map,$a,$leq,$lvar)                     v
sub rtt w0 Jllm(-2d0*omga*hh*zeta*sint/r_map,$a,$leq,$lvar)                     w
sub rtt w0 Illm(-hh,$a,$leq,$lvar)                                              Pi'
sub rtt w0 Illm(-pindex*hhz,$a,$leq,$lvar)                                      Pi
sub rtt w0 Illm(-hh,$a,$leq,$lvar)                                              Phi'
sub rtt w0 Illm(hhz/lambda,$a,$leq,$lvar)                                       B

termbc t 1 w0 1d0 u^uder(1)

subbc tt nr w1 Illmbc(zeta(nr,1:lres)**2*r_z(nr,1:lres)*hhz(nr,1:lres)/r_map(nr,1:lres)**2,$a,$leq,$lvar)           u(nr)
subbc tt nr w1 Jllmbc(zeta(nr,1:lres)*r_t(nr,1:lres)*hhz(nr,1:lres)/r_map(nr,1:lres)**2,$a,$leq,$lvar)              v(nr)
subbc tt nr w1 Kllmbc(zeta(nr,1:lres)*r_t(nr,1:lres)*hhz(nr,1:lres)/r_map(nr,1:lres)**2,$a,$leq,$lvar)              w(nr)
subbc tt nr w0 Kllmbc(-2d0*omga*hhz(nr,1:lres)*zeta(nr,1:lres)*sint(nr,1:lres)/r_map(nr,1:lres),$a,$leq,$lvar)      v(nr)
subbc tt nr w0 Jllmbc(-2d0*omga*hhz(nr,1:lres)*zeta(nr,1:lres)*sint(nr,1:lres)/r_map(nr,1:lres),$a,$leq,$lvar)      w(nr)
subbc tt nr w0 Illmbc(-(pindex+1d0)*hhz(nr,1:lres),$a,$leq,$lvar)                                                   Pi'(nr)
subbc tt nr w0 Illmbc(-pindex*hhzz(nr,1:lres),$a,$leq,$lvar)                                                        Pi(nr)
subbc tt nr w0 Illmbc(-hhz(nr,1:lres),$a,$leq,$lvar)                                                                Phi'(nr)
subbc tt nr w0 Illmbc(hhzz(nr,1:lres)/lambda,$a,$leq,$lvar)                                                         B(nr)
subbc tt nr w0 Illmbc(hhz(nr,1:lres)/lambda,$a,$leq,$lvar)                                                          B'(nr)
#-------------------------------------------------------------------------------------
equation eqv

sub rtt w1 Jllmc(zeta*r_t/r_map**2,$a,$leq,$lvar)                               u
sub rtt w1 Lllm((r_map**2+r_t**2)/(r_map**2*r_z),$a,$leq,$lvar)                 v
instruction call modify_l0($prev,abs(m)+iparity)
sub rtt w1 Nllm(1d0/r_z,$a,$leq,$lvar)                                          v
sub rtt w1 Mllm((r_map**2+r_t**2)/(r_map**2*r_z),$a,$leq,$lvar)                 w
sub rtt w1 Mllmc(-1d0/r_z,$a,$leq,$lvar)                                        w
sub rtt w0 Kllmc(2d0*omga*zeta*sint/r_map,$a,$leq,$lvar)                        u
sub rtt w0 Mllm(-2d0*omga*(r_t*sint+r_map*cost)/(r_map*r_z),$a,$leq,$lvar)      v
sub rtt w0 Mllmc(2d0*omga*(r_t*sint+r_map*cost)/(r_map*r_z),$a,$leq,$lvar)      v
sub rtt w0 Lllm(-2d0*omga*(r_t*sint+r_map*cost)/(r_map*r_z),$a,$leq,$lvar)      w
sub rtt w0 Nllm(-2d0*omga*(r_t*sint+r_map*cost)/(r_map*r_z),$a,$leq,$lvar)      w
sub rtt w0 Lllm(-1d0/zeta,$a,$leq,$lvar)                                        Pi
sub rtt w0 Nllm(-1d0/zeta,$a,$leq,$lvar)                                        Pi
sub rtt w0 Jllmc(-pindex*lnhht/zeta,$a,$leq,$lvar)                              Pi
sub rtt w0 Lllm(-1d0/zeta,$a,$leq,$lvar)                                        Phi
sub rtt w0 Nllm(-1d0/zeta,$a,$leq,$lvar)                                        Phi
sub rtt w0 Jllmc(lnhht/(lambda*zeta),$a,$leq,$lvar)                             B

termbc t 1 w0 1d0 v^uder(1)
#-------------------------------------------------------------------------------------
equation eqw

sub rtt w1 Kllmc(zeta*r_t/r_map**2,$a,$leq,$lvar)                               u
sub rtt w1 Mllmc((r_map**2+r_t**2)/(r_map**2*r_z),$a,$leq,$lvar)                v
sub rtt w1 Mllm(-1d0/r_z,$a,$leq,$lvar)                                         v
sub rtt w1 Nllm(-(r_map**2+r_t**2)/(r_map**2*r_z),$a,$leq,$lvar)                w
sub rtt w1 Lllm(-1d0/r_z,$a,$leq,$lvar)                                         w
instruction call modify_l0($prev,abs(m)+1-iparity)
sub rtt w0 Jllmc(2d0*omga*zeta*sint/r_map,$a,$leq,$lvar)                        u
sub rtt w0 Lllm(2d0*omga*(r_t*sint+r_map*cost)/(r_map*r_z),$a,$leq,$lvar)       v
sub rtt w0 Nllm(2d0*omga*(r_t*sint+r_map*cost)/(r_map*r_z),$a,$leq,$lvar)       v
sub rtt w0 Mllm(2d0*omga*(r_t*sint+r_map*cost)/(r_map*r_z),$a,$leq,$lvar)       w
sub rtt w0 Mllmc(-2d0*omga*(r_t*sint+r_map*cost)/(r_map*r_z),$a,$leq,$lvar)     w
sub rtt w0 Mllm(1d0/zeta,$a,$leq,$lvar)                                         Pi
sub rtt w0 Mllmc(-1d0/zeta,$a,$leq,$lvar)                                       Pi
sub rtt w0 Kllmc(-pindex*lnhht/zeta,$a,$leq,$lvar)                              Pi
sub rtt w0 Mllm(1d0/zeta,$a,$leq,$lvar)                                         Phi
sub rtt w0 Mllmc(-1d0/zeta,$a,$leq,$lvar)                                       Phi
sub rtt w0 Kllmc(lnhht/(lambda*zeta),$a,$leq,$lvar)                             B

termbc t 1 w0 1d0 w^uder(1)
#-------------------------------------------------------------------------------------
equation eqPi

term s w1 -1d0                                                                         Pi
term s w1 Gamma1/((pindex+1d0)*lambda)                                                 B
sub rtt w0 Illm((Gamma1/gamma_p-1d0)*zeta**2*hhz/(lambda*r_map**2*r_z),$a,$leq,$lvar)  u
sub rtt w0 Jllm((Gamma1/gamma_p-1d0)*zeta*hht/(lambda*r_map**2*r_z),$a,$leq,$lvar)     v
sub rtt w0 Kllm((Gamma1/gamma_p-1d0)*zeta*hht/(lambda*r_map**2*r_z),$a,$leq,$lvar)     w

termbc t 1 w0 1d0 Pi^pder(1)
#-------------------------------------------------------------------------------------
equation eqPhi

sub rtt w0 Illm((r_map**2+r_t**2)/r_z**2,$a,$leq,$lvar)                                                                         Phi''
sub rtt w0 Illm((2d0*r_z*r_t*r_zt-r_map**2*r_zz-r_z**2*r_tt+2d0*r_map*r_z**2-r_t**2*r_zz-r_z**2*r_t*cott)/r_z**3,$a,$leq,$lvar) Phi'
sub rtt w0 Jllm(-2d0*r_t/r_z,$a,$leq,$lvar)                                                                                     Phi'
term rt w0 -1d0                                                                                                                 Phi
instruction $prev = $prev*dble($lvar($j1)*($lvar($j1)+1))
sub rtt w0 Illm(-r_map**2*hh**(pindex-1d0),$a,$leq,$lvar)                                                                       B

termbc t 1 w0 1d0            Phi^pder(1)
termbc t nr w0 1d0           Phi(nr)
termbc t nr w0 -1d0          Phie(nr)
#-------------------------------------------------------------------------------------
equation eqPhie

sub rtt w0 Illm((re_map**2+re_t**2)/re_z**2,$a,$leq,$lvar)                                                                                    Phie''
sub rtt w0 Illm((2d0*re_z*re_t*re_zt-re_map**2*re_zz-re_z**2*re_tt+2d0*re_map*re_z**2-re_t**2*re_zz-re_z**2*re_t*cott)/re_z**3,$a,$leq,$lvar) Phie'
sub rtt w0 Jllm(-2d0*re_t/re_z,$a,$leq,$lvar)                                                                                                 Phie'
term rt w0 -1d0                                                                                                                               Phie
instruction $prev = $prev*dble($lvar($j1)*($lvar($j1)+1))

termbc t 1 w0 1d0/(aplat-1d0)        Phie'(1)
termbc t 1 w0 ($lvar($j1)+1d0)/2d0   Phie(1)
termbc t nr w0 1d0                   Phi'(nr)
termbc t nr w0 1d0                   Phie'(nr)
#-------------------------------------------------------------------------------------
instruction zeta(1,$j1) = 0d0
instruction r_map(1,$j1) = 0d0
